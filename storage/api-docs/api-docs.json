{
    "openapi": "3.0.0",
    "info": {
        "title": "API Docs",
        "version": "1.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000/api/v1",
            "description": "Local Development Server"
        },
        {
            "url": "http://localhost:81/",
            "description": "Test Server"
        }
    ],
    "paths": {
        "/positions": {
            "get": {
                "tags": [
                    "positions"
                ],
                "summary": "Get users positions",
                "description": "## Returns a list of all available users positions.",
                "operationId": "df6e40d3a9b218e648b773c8ea9ec767",
                "parameters": [],
                "responses": {
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "properties": {
                                                "success": {
                                                    "description": "The request was not successful",
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "message": {
                                                    "description": "The error message",
                                                    "type": "string",
                                                    "example": "Unauthorized"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "properties": {
                                                "success": {
                                                    "description": "The request was successful",
                                                    "type": "boolean",
                                                    "example": true
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "$ref": "#/components/schemas/PositionResourceCollectionV1"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No positions found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "properties": {
                                                "success": {
                                                    "description": "The request was not successful",
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "message": {
                                                    "description": "The error message",
                                                    "type": "string",
                                                    "example": "No positions found"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ]
            }
        },
        "/token": {
            "get": {
                "tags": [
                    "token"
                ],
                "summary": "Get a new token",
                "description": "## Method returns a token that is required to register a new user.\n- The token is valid for **40 minutes** and can be used for only **one** request.\n- For the next registration, you will need to get a **new one**.",
                "operationId": "81b8c9582d061aa8a760ef74541e0ef2",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "properties": {
                                                "success": {
                                                    "description": "The request was successful",
                                                    "type": "boolean",
                                                    "example": true
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "$ref": "#/components/schemas/TokenResourceV1"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Get list of users",
                "description": "**Returns users data from a database divided into pages and sorted by ID in the ascending order.**\n - You can specify the parameters such as count and page, which correspond to the number of users on the page, missing record number and page number.\n - To navigate through the pages, you can use the links in the server's response: next_link to go to the next page and prev_link to return to the previous page.\n - If the next or previous page does not exist, the next_link/prev_link parameter will be set to null",
                "operationId": "b7ef77083ca487a064f6a0ee5dcbc349",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Specify the page that you want to retrieve",
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Specify the number of users on the page",
                        "schema": {
                            "type": "integer",
                            "example": 5
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "properties": {
                                                "success": {
                                                    "description": "The request was successful",
                                                    "type": "boolean",
                                                    "example": true
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "type": "object",
                                            "allOf": [
                                                {
                                                    "$ref": "#/components/schemas/PaginatedResource"
                                                },
                                                {
                                                    "properties": {
                                                        "total_users": {
                                                            "type": "integer",
                                                            "example": 5
                                                        },
                                                        "users": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/components/schemas/UserResourceV1"
                                                            }
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "users"
                ],
                "summary": "Create a new user",
                "description": "**User registration request.**\n\nAll fields are *required*:\n- name - user name, should be 2-60 characters\n- email - user email, must be a valid email according to RFC2822\n- phone - user phone number, should start with code of Ukraine +380\n- position_id - user position id. You can get list of all positions with their IDs using the API method GET api/v1/positions\n- photo - user photo should be jpg/jpeg image, with resolution at least 70x70px and size must not exceed 5MB.",
                "operationId": "6b3a0ef7fc87b7fb2306b13ff4dbde7d",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserStoreRequestV1"
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "properties": {
                                                "success": {
                                                    "description": "The request was not successful",
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "message": {
                                                    "description": "The error message",
                                                    "type": "string",
                                                    "example": "Unauthorized"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "name": [
                                                    "The name field is invalid."
                                                ],
                                                "email": [
                                                    "The email field is invalid."
                                                ],
                                                "phone": [
                                                    "The phone field is invalid."
                                                ],
                                                "position_id": [
                                                    "The position_id field is invalid."
                                                ],
                                                "photo": [
                                                    "The photo field is invalid."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "properties": {
                                                "success": {
                                                    "description": "The request was successful",
                                                    "type": "boolean",
                                                    "example": true
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "properties": {
                                                "user": {
                                                    "$ref": "#/components/schemas/UserResourceV1"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ]
            }
        },
        "/users/{id}": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Get user by id",
                "operationId": "98e65c3fbcc4903c750c113e9963d990",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the user to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "properties": {
                                                "success": {
                                                    "description": "The request was successful",
                                                    "type": "boolean",
                                                    "example": true
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "properties": {
                                                "user": {
                                                    "$ref": "#/components/schemas/UserResourceV1"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No user found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "properties": {
                                                "success": {
                                                    "description": "The request was not successful",
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "message": {
                                                    "description": "The error message",
                                                    "type": "string",
                                                    "example": "No user found"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "UserStoreRequestV1": {
                "required": [
                    "name",
                    "email",
                    "phone",
                    "position_id",
                    "photo"
                ],
                "properties": {
                    "name": {
                        "description": "User name",
                        "type": "string",
                        "maxLength": 60,
                        "minLength": 2
                    },
                    "email": {
                        "description": "User email",
                        "type": "string",
                        "format": "email",
                        "maxLength": 255
                    },
                    "phone": {
                        "description": "User phone",
                        "type": "string",
                        "maxLength": 15,
                        "minLength": 13,
                        "example": "+380501234567"
                    },
                    "position_id": {
                        "description": "Position id",
                        "type": "integer",
                        "example": 1
                    },
                    "photo": {
                        "description": "User photo",
                        "type": "string",
                        "format": "binary"
                    }
                },
                "type": "object"
            },
            "PositionResourceCollectionV1": {
                "properties": {
                    "positions": {
                        "description": "A collection of positions",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PositionResourceV1"
                        }
                    }
                },
                "type": "object",
                "additionalProperties": false
            },
            "PositionResourceV1": {
                "properties": {
                    "id": {
                        "description": "ID of the position",
                        "type": "integer",
                        "example": "2"
                    },
                    "name": {
                        "description": "Name of the position",
                        "type": "string",
                        "example": "Security"
                    }
                },
                "type": "object",
                "additionalProperties": false
            },
            "TokenResourceV1": {
                "properties": {
                    "token": {
                        "description": "JWT token, used for authentication",
                        "type": "string",
                        "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiIsImp0aSI6IjAxOTA5MWYzLTJmYmUtNzRmYS1hMGVlLTA4ZTk1NmJiMjdmMSJ9.eyJpYXQiOjE3MjA0MzU1NTIuMTg3NDc1LCJleHAiOjE3MjA0Mzc5NTIuMTg3NDc1fQ.XygWBEsXp1GxLGrAygmNgPP9KotIxAQt6CWMHi0CZ88"
                    }
                },
                "type": "object",
                "additionalProperties": false
            },
            "UserCollectionV1": {
                "properties": {
                    "page": {
                        "type": "integer",
                        "example": 1
                    },
                    "total_pages": {
                        "type": "integer",
                        "example": 10
                    },
                    "total_users": {
                        "type": "integer",
                        "example": 47
                    },
                    "count": {
                        "type": "integer",
                        "example": 5
                    },
                    "links": {
                        "properties": {
                            "next_url": {
                                "type": "string",
                                "nullable": true
                            },
                            "prev_url": {
                                "type": "string",
                                "nullable": true
                            }
                        },
                        "type": "object"
                    },
                    "users": {
                        "description": "A collection of users",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserResourceV1"
                        }
                    }
                },
                "type": "object",
                "additionalProperties": false
            },
            "UserResourceV1": {
                "properties": {
                    "name": {
                        "description": "User name",
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "description": "User email",
                        "type": "string",
                        "example": "john@example.net"
                    },
                    "phone": {
                        "description": "User phone",
                        "type": "string",
                        "example": "+380950104161"
                    },
                    "registration_timestamp": {
                        "description": "User registration timestamp",
                        "type": "integer",
                        "example": "1630512000"
                    },
                    "position_id": {
                        "description": "User position id",
                        "type": "integer",
                        "example": "1"
                    },
                    "position": {
                        "description": "User position name",
                        "type": "string",
                        "example": "Security"
                    },
                    "photo": {
                        "description": "User photo",
                        "type": "string",
                        "format": "uri",
                        "example": "http://example.net/storage/avatars/123.jpg"
                    }
                },
                "type": "object",
                "additionalProperties": false
            },
            "PaginatedResource": {
                "properties": {
                    "links": {
                        "properties": {
                            "next_url": {
                                "type": "string",
                                "nullable": true
                            },
                            "prev_url": {
                                "type": "string",
                                "nullable": true
                            }
                        },
                        "type": "object"
                    },
                    "page": {
                        "type": "integer",
                        "example": 1
                    },
                    "count": {
                        "type": "integer",
                        "example": 5
                    },
                    "total_pages": {
                        "type": "integer",
                        "example": 10
                    }
                },
                "type": "object"
            }
        },
        "requestBodies": {
            "App\\Http\\Requests\\V1\\User\\UserStoreRequestV1": {
                "required": true,
                "content": {
                    "multipart/form-data": {
                        "schema": {
                            "$ref": "#/components/schemas/UserStoreRequestV1"
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "tokenAuth": {
                "type": "apiKey",
                "name": "Authorization",
                "in": "header"
            }
        }
    },
    "tags": [
        {
            "name": "users"
        },
        {
            "name": "positions"
        },
        {
            "name": "token"
        }
    ]
}